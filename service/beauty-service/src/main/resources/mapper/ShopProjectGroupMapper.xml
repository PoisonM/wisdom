<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wisdom.beauty.core.mapper.ShopProjectGroupDao">
  <resultMap id="BaseResultMap" type="com.wisdom.beauty.api.dto.ShopProjectGroupDTO">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_group_name" jdbcType="VARCHAR" property="projectGroupName" />
    <result column="project_group_url" jdbcType="VARCHAR" property="projectGroupUrl" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="discount_price" jdbcType="DECIMAL" property="discountPrice" />
    <result column="valid_date" jdbcType="TIMESTAMP" property="validDate" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_group_name, project_group_url, market_price, discount_price, valid_date, 
    desc, status, create_by, create_date, update_user, update_date
  </sql>
  <select id="selectByCriteria" parameterType="com.wisdom.beauty.api.dto.ShopProjectGroupCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_project_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0">
      limit ${limitStart},${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_project_group
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from shop_project_group
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.wisdom.beauty.api.dto.ShopProjectGroupCriteria">
    delete from shop_project_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wisdom.beauty.api.dto.ShopProjectGroupDTO">
    insert into shop_project_group (id, project_group_name, project_group_url, 
      market_price, discount_price, valid_date, 
      desc, status, create_by, 
      create_date, update_user, update_date
      )
    values (#{id,jdbcType=VARCHAR}, #{projectGroupName,jdbcType=VARCHAR}, #{projectGroupUrl,jdbcType=VARCHAR}, 
      #{marketPrice,jdbcType=DECIMAL}, #{discountPrice,jdbcType=DECIMAL}, #{validDate,jdbcType=TIMESTAMP}, 
      #{desc,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wisdom.beauty.api.dto.ShopProjectGroupDTO">
    insert into shop_project_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectGroupName != null">
        project_group_name,
      </if>
      <if test="projectGroupUrl != null">
        project_group_url,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="discountPrice != null">
        discount_price,
      </if>
      <if test="validDate != null">
        valid_date,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectGroupName != null">
        #{projectGroupName,jdbcType=VARCHAR},
      </if>
      <if test="projectGroupUrl != null">
        #{projectGroupUrl,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null">
        #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="validDate != null">
        #{validDate,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="com.wisdom.beauty.api.dto.ShopProjectGroupCriteria" resultType="java.lang.Integer">
    select count(1) from shop_project_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map">
    update shop_project_group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectGroupName != null">
        project_group_name = #{record.projectGroupName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectGroupUrl != null">
        project_group_url = #{record.projectGroupUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.discountPrice != null">
        discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.validDate != null">
        valid_date = #{record.validDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update shop_project_group
    set id = #{record.id,jdbcType=VARCHAR},
      project_group_name = #{record.projectGroupName,jdbcType=VARCHAR},
      project_group_url = #{record.projectGroupUrl,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      valid_date = #{record.validDate,jdbcType=TIMESTAMP},
      desc = #{record.desc,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wisdom.beauty.api.dto.ShopProjectGroupDTO">
    update shop_project_group
    <set>
      <if test="projectGroupName != null">
        project_group_name = #{projectGroupName,jdbcType=VARCHAR},
      </if>
      <if test="projectGroupUrl != null">
        project_group_url = #{projectGroupUrl,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null">
        discount_price = #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="validDate != null">
        valid_date = #{validDate,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wisdom.beauty.api.dto.ShopProjectGroupDTO">
    update shop_project_group
    set project_group_name = #{projectGroupName,jdbcType=VARCHAR},
      project_group_url = #{projectGroupUrl,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      discount_price = #{discountPrice,jdbcType=DECIMAL},
      valid_date = #{validDate,jdbcType=TIMESTAMP},
      desc = #{desc,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
</mapper>